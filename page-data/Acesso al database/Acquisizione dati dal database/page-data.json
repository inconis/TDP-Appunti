{"componentChunkName":"component---src-templates-notes-js","path":"/Acesso al database/Acquisizione dati dal database/","result":{"data":{"markdownRemark":{"html":"<hr>\n<p>Per evitare l' SQL injection si utilizzano query parametrizzate in modo da poter inserire il valore preso in input direttamente come testo o numero.</p>\n<p>Qui si trova un esempio di codice scritto <strong>con</strong> l'utilizzo del <strong>connection pooling</strong></p>\n<ol>\n<li>Creare un package denominato <code class=\"language-text\">db</code></li>\n<li>Creare una classe <code class=\"language-text\">DBconnect</code> in cui inserire i dati del database</li>\n<li>Creare una classe per ogni tipologia di accesso al databse simile al seocno esempio </li>\n</ol>\n<h2>Classe <code class=\"language-text\">DBConnect</code></h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span>Connection<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span>SQLException<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>zaxxer<span class=\"token punctuation\">.</span>hikari<span class=\"token punctuation\">.</span>HikariConfig<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>zaxxer<span class=\"token punctuation\">.</span>hikari<span class=\"token punctuation\">.</span>HikariDataSource<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DBConnect</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> final String jdbcURL <span class=\"token operator\">=</span> <span class=\"token string\">\"jdbc:mysql://localhost/&lt;nome tabella>\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> HikariDataSource ds<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> Connection <span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ds <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tHikariConfig config <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HikariConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tconfig<span class=\"token punctuation\">.</span><span class=\"token function\">setJdbcUrl</span><span class=\"token punctuation\">(</span>jdbcURL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tconfig<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tconfig<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rootroot\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\tconfig<span class=\"token punctuation\">.</span><span class=\"token function\">addDataSourceProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cachePrepStmts\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tconfig<span class=\"token punctuation\">.</span><span class=\"token function\">addDataSourceProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prepStmtChacheSize\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">250</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tconfig<span class=\"token punctuation\">.</span><span class=\"token function\">addDataSourceProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prepStmtCacheSqlLimit\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2048\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\tds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HikariDataSource</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> ds<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tSystem<span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Errore di connessione ad db\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Classe <code class=\"language-text\">EntitaConnect</code></h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span>Connection<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span>PreparedStatement<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span>ResultSet<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span>SQLException<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>ArrayList<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>List<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DizionarioDAO</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> List<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span> <span class=\"token function\">listParola</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tList<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n\t\t####<span class=\"token constant\">IMPOSTARE</span> <span class=\"token constant\">QUERY</span>#####\n\t\tString query <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT nome FROM parola WHERE parola=? ORDER BY nome\"</span> <span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\t\t\tConnection conn <span class=\"token operator\">=</span> DBConnect<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n\t\t\tPreparedStatement st <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">prepareStatement</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n\n\t\t\t####<span class=\"token constant\">IMPOSTARE</span> <span class=\"token constant\">PARAMETRI</span>#####\n\t\t\tst<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> anagramma<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token operator\">...</span>\n\t\t\t############################\n\n\n\t\t\tResultSet res <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">executeQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\tresult<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nome\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\t\n\t\t\tres<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tconn<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\">// TODO Auto-generated catch block</span>\n\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> result <span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Come acquisire i dati dal database","description":"Istruzioni base per acquisire i dati dal database"}}},"pageContext":{"slug":"/Acesso al database/Acquisizione dati dal database/"}}}